#!/bin/bash -e
SERVER_ROOT=$APPIAN_ROOT/server
COMMAND=$1

function error_already_setup() {
  echo
  echo "Appian is already setup. Run \`appian destroy\` first if you're changing envs"
  echo
  exit 1
}

function error_needs_env() {
  echo
  echo "Please select an environment"
  echo
  echo "  appian $1 [env]"
  echo
  exit 1
}

function error_not_configured() {
  echo
  echo "Appian not configured please run setup first"
  echo
  echo "  appian setup [env]"
  echo
  exit 1
}

function show_help() {
  echo
  echo "Appian"
  echo "======"
  echo
  echo "  new     - Create a new project"
  echo "  server  - Start the appian server"
  echo "  setup   - Setup server config and database"
  echo "  destroy - Deletes the database and env info"
  echo "  reload  - Destroy, setup then server"
  echo
}


function run_setup() {
  cd $SERVER_ROOT

  cp config/database.yml.$1 config/database.yml
  cp db/seeds.rb.$1 db/seeds.rb
  rake db:create:all
  rake db:migrate
  rake db:seed
}

function destroy_setup() {
  cd $SERVER_ROOT

  rake db:drop:all
  rm -f config/database.yml
  rm -f db/schema.rb
  rm -f db/seeds.rb
}

function run_server() {
  cd $SERVER_ROOT
  rails s
}

function main() {
  if [[ "x$1" != "x" ]]; then
	  if [[ "x$1" == "xsetup" ]]; then
	    if [[ -f "$SERVER_ROOT/config/database.yml" ]]; then
        error_already_setup
      fi

		  if [[ "x$2" != "x" ]]; then
        run_setup $2
        exit 0
		  else
        error_needs_env $1
		  fi
	  fi

	  if [[ "x$1" == "xreload" ]]; then
		  if [[ "x$2" == "x" ]]; then
        error_needs_env $1
		  fi

      destroy_setup
      run_setup $2
      run_server
      exit 0
    fi

	  if [[ "x$1" == "xdestroy" ]]; then
      destroy_setup
      exit 0
	  fi

	  if [[ ! -f "$SERVER_ROOT/config/database.yml" ]]; then
      error_not_configured
	  fi

	  if [[ "x$1" == "xserver" ]]; then
      run_server
      exit 0
	  fi
  fi

  show_help
}

main $@
